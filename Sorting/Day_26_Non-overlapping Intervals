class Solution {
    static int minRemoval(int intervals[][]) {
        // Sort intervals by their end times
        Arrays.sort(intervals, (a, b) -> Integer.compare(a[1], b[1]));
        
        int prevEnd = Integer.MIN_VALUE; // End time of the last included interval
        int removals = 0;

        for (int[] interval : intervals) {
            int start = interval[0];
            int end = interval[1];

            if (start >= prevEnd) {
                // Non-overlapping interval, update prevEnd
                prevEnd = end;
            } else {
                // Overlapping interval, count it for removal
                removals++;
            }
        }

        return removals;
    }

    // Example Usage
    public static void main(String[] args) {
        int[][] intervals1 = {{1, 2}, {2, 3}, {3, 4}, {1, 3}};
        int[][] intervals2 = {{1, 3}, {1, 3}, {1, 3}};
        int[][] intervals3 = {{1, 2}, {5, 10}, {18, 35}, {40, 45}};
        
        System.out.println(minRemoval(intervals1)); // Output: 1
        System.out.println(minRemoval(intervals2)); // Output: 2
        System.out.println(minRemoval(intervals3)); // Output: 0
    }
}
